---
title: "lab-2.2"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(stringr)
library(janitor)
library(tidyr)
library(dplyr)
library('tidyverse')
```

```{r}



# INSERT CODE TO READ THE DATA FILES 
df1 <- read.csv("../../data/00-raw-data/Brown_TestRelease_phenotypic.csv")
df2 <- read.csv("../../data/00-raw-data/KKI_phenotypic.csv")
df3 <- read.csv("../../data/00-raw-data/NYU_phenotypic.csv")
df4 <- read.csv("../../data/00-raw-data/OHSU_phenotypic.csv")
df5 <- read.csv("../../data/00-raw-data/OHSU_TestRelease_phenotypic.csv")
df6 <- read.csv("../../data/00-raw-data/Peking_1_phenotypic.csv")
df7 <- read.csv("../../data/00-raw-data/Peking_1_TestRelease_phenotypic.csv")
tibble_df1 <- as_tibble(df1)
tibble_df2 <- as_tibble(df2)
tibble_df3 <- as_tibble(df3)
tibble_df4 <- as_tibble(df4)
tibble_df5 <- as_tibble(df5)
tibble_df6 <- as_tibble(df6)
tibble_df7 <- as_tibble(df7)
```


```{r}
 head(tibble_df1,5)
 head(tibble_df2,5)
```

```{r}
 # LOOK AT LAST COUPLE LINES
 tail(tibble_df1,5)
 tail(tibble_df2,5)
```

```{r}
tibble_df1 <- tibble_df1 %>%
  clean_names()
tibble_df2 <- tibble_df2 %>%
  clean_names()
tibble_df3 <- tibble_df1 %>%
  clean_names()
tibble_df4 <- tibble_df2 %>%
  clean_names()
tibble_df5 <- tibble_df1 %>%
  clean_names()
tibble_df6 <- tibble_df2 %>%
  clean_names()
tibble_df7 <- tibble_df1 %>%
  clean_names()
```

```{r}
#standardising the columns
# REPLACE ALL CELLS THAT ARE ENTIRELY SPACE (OR EMPTY) WITH NAN 
#noticed spaces in df1, and df6
tibble_df1 <- tibble_df1 %>%
  mutate_all(funs(ifelse(is.na(.), NaN, .)))
tibble_df2 <- tibble_df2 %>%
  mutate_all(funs(ifelse(is.na(.), NaN, .)))
tibble_df3 <- tibble_df3 %>%
  mutate_all(funs(ifelse(is.na(.), NaN, .)))
tibble_df4 <- tibble_df4 %>%
  mutate_all(funs(ifelse(is.na(.), NaN, .)))
tibble_df5 <- tibble_df5 %>%
  mutate_all(funs(ifelse(is.na(.), NaN, .)))
tibble_df6 <- tibble_df6 %>%
  mutate_all(funs(ifelse(is.na(.), NaN, .)))
tibble_df7 <- tibble_df7 %>%
  mutate_all(funs(ifelse(is.na(.), NaN, .)))
```
```{r}
# INSERT CODE TO COUNT THE NUMBER OF MISSING VALUES IN EACH COLUMN (use google)
# Count missing values in each column
missing_count <- colSums(is.na(tibble_df1))
# Print the result
print(missing_count)
```

```{r}
tibble_df1$handedness <- as.numeric(tibble_df1$handedness)
tibble_df2$handedness <- as.numeric(tibble_df2$handedness)
tibble_df3$handedness <- as.numeric(tibble_df3$handedness)
tibble_df4$handedness <- as.numeric(tibble_df4$handedness)
tibble_df5$handedness <- as.numeric(tibble_df5$handedness)
tibble_df6$handedness <- as.numeric(tibble_df6$handedness)
tibble_df7$handedness <- as.numeric(tibble_df7$handedness)
```

```{r}
tibble_df1$adhd_index <- as.numeric(tibble_df1$adhd_index)
tibble_df2$adhd_index <- as.numeric(tibble_df2$adhd_index)
tibble_df3$adhd_index <- as.numeric(tibble_df3$adhd_index)
tibble_df4$adhd_index <- as.numeric(tibble_df4$adhd_index)
tibble_df5$adhd_index <- as.numeric(tibble_df5$adhd_index)
tibble_df6$adhd_index <- as.numeric(tibble_df6$adhd_index)
tibble_df7$adhd_index <- as.numeric(tibble_df7$adhd_index)
```

```{r}
tibble_df1$inattentive <- as.numeric(tibble_df1$inattentive)
tibble_df2$inattentive <- as.numeric(tibble_df2$inattentive)
tibble_df3$inattentive <- as.numeric(tibble_df3$inattentive)
tibble_df4$inattentive <- as.numeric(tibble_df4$inattentive)
tibble_df5$inattentive<- as.numeric(tibble_df5$inattentive)
tibble_df6$inattentive <- as.numeric(tibble_df6$inattentive)
tibble_df7$inattentive <- as.numeric(tibble_df7$inattentive)
```

```{r}
tibble_df1$med_status <- as.numeric(tibble_df1$med_status)
tibble_df2$med_status <- as.numeric(tibble_df2$med_status)
tibble_df3$med_status <- as.numeric(tibble_df3$med_status)
tibble_df4$med_status <- as.numeric(tibble_df4$med_status)
tibble_df5$med_status <- as.numeric(tibble_df5$med_status)
tibble_df6$med_status <- as.numeric(tibble_df6$med_status)
tibble_df7$med_status <- as.numeric(tibble_df7$med_status)
```

```{r}

tibble_df1$hyper_impulsive <- as.numeric(tibble_df1$hyper_impulsive)
tibble_df2$hyper_impulsive <- as.numeric(tibble_df2$hyper_impulsive)
tibble_df3$hyper_impulsive <- as.numeric(tibble_df3$hyper_impulsive)
tibble_df4$hyper_impulsive <- as.numeric(tibble_df4$hyper_impulsive)
tibble_df5$hyper_impulsive <- as.numeric(tibble_df5$hyper_impulsive)
tibble_df6$hyper_impulsive <- as.numeric(tibble_df6$hyper_impulsive)
tibble_df7$hyper_impulsive <- as.numeric(tibble_df7$hyper_impulsive)

```

```{r}
data_types <- sapply(tibble_df1, typeof)
print(data_types)
```

```{r}
#replace the missing values to NaN
tibble_df1 <- tibble_df1 %>%
  mutate_all(funs(ifelse(is.na(.), "NaN", .)))
tibble_df2 <- tibble_df2 %>%
  mutate_all(funs(ifelse(is.na(.), "NaN", .)))
tibble_df3 <- tibble_df3 %>%
  mutate_all(funs(ifelse(is.na(.), "NaN", .)))
tibble_df4 <- tibble_df4 %>%
  mutate_all(funs(ifelse(is.na(.), "NaN", .)))
tibble_df5 <- tibble_df5 %>%
  mutate_all(funs(ifelse(is.na(.), "NaN", .)))
tibble_df6 <- tibble_df6 %>%
  mutate_all(funs(ifelse(is.na(.), "NaN", .)))
tibble_df7 <- tibble_df7 %>%
  mutate_all(funs(ifelse(is.na(.), "NaN", .)))
```
```{r}
tibble_df1 <- tibble_df1 %>%
  select_if(~all(!is.nan(.)))
tibble_df1
```

```{r}
write.csv(df1, '../../data/01-modified-data/Brown_TestRelease_phenotypic_clean.csv', row.names = FALSE)
write.csv(df2, '../../data/01-modified-data/KKI_phenotypic_clean.csv', row.names = FALSE)
write.csv(df3, '../../data/01-modified-data/NYU_phenotypic_clean.csv', row.names = FALSE)
write.csv(df4, '../../data/01-modified-data/OHSU_phenotypic_clean.csv', row.names = FALSE)
write.csv(df5, '../../data/01-modified-data/OHSU_TestRelease_phenotypic_clean.csv', row.names = FALSE)
write.csv(df6, '../../data/01-modified-data/Peking_1_phenotypic_clean.csv', row.names = FALSE)
write.csv(df7, '../../data/01-modified-data/Peking_1_TestRelease_phenotypic_clean.csv', row.names = FALSE)
```

